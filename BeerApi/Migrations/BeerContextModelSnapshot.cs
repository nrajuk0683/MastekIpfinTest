// <auto-generated />
using System;
using BeerApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BeerApi.Migrations
{
    [DbContext(typeof(BeerContext))]
    partial class BeerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.20");

            modelBuilder.Entity("BeerApi.Models.Bar", b =>
                {
                    b.Property<int>("BarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("BarId");

                    b.ToTable("Bars");
                });

            modelBuilder.Entity("BeerApi.Models.BarBeer", b =>
                {
                    b.Property<int>("BarId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("BeerId")
                        .HasColumnType("INTEGER");

                    b.HasKey("BarId", "BeerId");

                    b.HasIndex("BeerId");

                    b.ToTable("BarBeers");
                });

            modelBuilder.Entity("BeerApi.Models.Beer", b =>
                {
                    b.Property<int>("BeerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BreweryId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("BreweryId1")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("PercentageAlcoholByVolume")
                        .HasColumnType("TEXT");

                    b.HasKey("BeerId");

                    b.HasIndex("BreweryId");

                    b.HasIndex("BreweryId1");

                    b.ToTable("Beers");
                });

            modelBuilder.Entity("BeerApi.Models.Brewery", b =>
                {
                    b.Property<int>("BreweryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("BreweryId");

                    b.ToTable("Breweries");
                });

            modelBuilder.Entity("BeerApi.Models.BreweryBeer", b =>
                {
                    b.Property<int>("BreweryId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("BeerId")
                        .HasColumnType("INTEGER");

                    b.HasKey("BreweryId", "BeerId");

                    b.HasIndex("BeerId");

                    b.ToTable("BreweryBeers");
                });

            modelBuilder.Entity("BeerApi.Models.BarBeer", b =>
                {
                    b.HasOne("BeerApi.Models.Bar", "Bar")
                        .WithMany("BarBeers")
                        .HasForeignKey("BarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BeerApi.Models.Beer", "Beer")
                        .WithMany("BarBeers")
                        .HasForeignKey("BeerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BeerApi.Models.Beer", b =>
                {
                    b.HasOne("BeerApi.Models.Brewery", "Brewery")
                        .WithMany()
                        .HasForeignKey("BreweryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BeerApi.Models.Brewery", null)
                        .WithMany("Beers")
                        .HasForeignKey("BreweryId1");
                });

            modelBuilder.Entity("BeerApi.Models.BreweryBeer", b =>
                {
                    b.HasOne("BeerApi.Models.Beer", "Beer")
                        .WithMany()
                        .HasForeignKey("BeerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BeerApi.Models.Brewery", "Brewery")
                        .WithMany("BreweryBeers")
                        .HasForeignKey("BreweryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
